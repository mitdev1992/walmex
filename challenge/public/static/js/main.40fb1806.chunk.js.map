{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","table","width","formControl","spacing","minWidth","selectEmpty","marginTop","Home","classes","useState","users","setUsers","userAgeCount","setUserAgeCount","items","setItems","item","setItem","useEffect","fetch","then","response","json","console","log","Fragment","className","Typography","variant","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","user","scope","username","age","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","label","MenuItem","count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40fb1806.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n// import axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: { \n        margin: '20px'\n    },\n    table: {\n      width: 300,\n      margin: '20px'\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\nexport const Home = () => {\n    const classes = useStyles();\n\n    // This will hold the list of users\n    const [users, setUsers] = useState([]);\n    // this will hold the list of user count by age based on the user's item\n    const [userAgeCount, setUserAgeCount] = useState([]);\n    // this will hold the list of items to be displayed in dropdown for filter\n    const [items, setItems] = useState([]);\n\n    // this holds slected item when user selects an items from dropdown list\n    const [item, setItem] = useState('');\n\n    // API call to fetch users details\n    useEffect(() => {\n        fetch('/users')\n        .then(response => response.json())\n        .then(json => {\n            console.log(json);\n            setUsers(json);\n        })\n        \n    },[]);\n\n    // API call ro fetch the items details\n    useEffect(() => {\n        fetch('/items')\n        .then(response => response.json())\n        .then(json => {\n            console.log(json);\n            setItems(json);\n        });\n    },[])\n\n    // API to fetch the list of user count by age based on the user's item\n    useEffect(() => {\n        if (item !== '') {\n            fetch('/users/age?lookupItem='+item)\n            .then(response => response.json())\n            .then(json => {\n                console.log(json);\n                setUserAgeCount(json);\n            });\n\n            // axios.get('/users/age', {\n            //     params: {\n            //         'lookupItem': item\n            //     }\n            //   })\n            //   .then(function (response) {\n            //     console.log(response);\n            //     setUserAgeCount(response);\n            //   })\n            //   .catch(function (error) {\n            //     console.log(error);\n            //   }); \n        }\n    }, [item]);\n\n    // Function to handle item change from dropdowns\n    const handleChange = (event) => {\n        setItem(event.target.value);\n    };\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n            <Typography variant=\"h4\">All Users</Typography>\n            <Typography variant=\"subtitle1\">Users and their age</Typography>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Username</TableCell>\n                            <TableCell align=\"right\">Age</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {users.map((user) => (\n                        <TableRow key={user.username}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {user.username}\n                            </TableCell>\n                            <TableCell align=\"right\">{user.age}</TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            </div>\n            <div className={classes.root}>\n            <Typography variant=\"h4\">Age Demographic of User With {item}</Typography>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Item</InputLabel>\n                <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={item}\n                onChange={handleChange}\n                label=\"Item\"\n                >\n                {items.map(item => (<MenuItem value={item}>{item}</MenuItem>))}\n                </Select>\n            </FormControl>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Username</TableCell>\n                            <TableCell align=\"right\">Age</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {userAgeCount.map((userAgeCount) => (\n                        <TableRow key={userAgeCount.age}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {userAgeCount.age}\n                            </TableCell>\n                            <TableCell align=\"right\">{userAgeCount.count}</TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            </div>\n        </React.Fragment>\n    )\n}","import './App.css';\nimport { Home } from './components/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}